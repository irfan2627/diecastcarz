<%- include("../layouts/user_layouts/user_header.ejs") -%>

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<%- include("../layouts/user_layouts/user_topnav.ejs") -%>



<main class="main">
  <div class="page-header breadcrumb-wrap">
    <div class="container">
      <div class="breadcrumb">
        <a href="/" rel="nofollow">Home</a>
        <span></span> <a href="/user_shop_page">Shop</a>
      </div>
    </div>
  </div>
  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row flex-row-reverse">
        <div class="col-lg-9 col-12">
          <div class="shop-product-fillter style-2">
            <div class="totall-product">
              <h2>Products:</h2>
              <p>
                <% if (products && products.length > 0) { %>
                We found <strong class="text-brand"><%= products.length %></strong> items for you!
                <% } else { %>
                Sorry, no items were found.
                <% } %>
              </p>
            </div>
            <div class="sort-by-product-area">
              <div class="sort-by-cover stock-filter">
                <div class="sort-by-product-wrap">
                  <div class="sort-by">
                    <span>
                      <i class="fi-rs-apps-sort"></i>
                      Stock Status:
                      <span id="selected-stock" style="font-weight: bold; font-size: 1.1em;">
                        <%= stock %>
                      </span>
                    </span>
                  </div>
                </div>
                <div class="sort-by-dropdown">
                  <select id="stock" name="stock" onchange="updateStockFilter()" class="form-control">
                    <option value="All" <%= stock === 'All' ? 'selected' : '' %>>All</option>
                    <option value="In Stock" <%= stock === 'In Stock' ? 'selected' : '' %>>In Stock Only</option>
                  </select>
                </div>
              </div>

              <div class="sort-by-cover">
                <div class="sort-by-product-wrap">
                  <div class="sort-by">
                    <span>
                      <i class="fi-rs-apps-sort"></i> Sort by:
                      <span id="selected-sort" style="font-weight: bold; font-size: 1.1em;">
                        <%= selectedSort %>
                      </span>
                    </span>
                  </div>
                </div>
                <div class="sort-by-dropdown">
                  <ul>
                    <li><a class="sort-option" data-sort="Featured" href="#">Featured</a></li>
                    <li><a class="sort-option" data-sort="Newest" href="#">Newest</a></li>
                    <li><a class="sort-option" data-sort="A to Z" href="#">A to Z</a></li>
                    <li><a class="sort-option" data-sort="Z to A" href="#">Z to A</a></li>
                    <li><a class="sort-option" data-sort="Price: Low to High" href="#">Price: Low to High</a></li>
                    <li><a class="sort-option" data-sort="Price: High to Low" href="#">Price: High to Low</a></li>
                  </ul>
                </div>
              </div>
            </div>


          </div>

          <% if (products && products.length >= 1) { %>
          <% for (let i = 0; i < products.length; i++) { %>
          <div class="product-list mb-50" data-sales-price="<%= products[i].salesPrice %>">
            <div class="product-cart-wrap">
              <div class="product-img-action-wrap" style="background-color: white;">
                <div class="product-img product-img-zoom">
                  <div class="product-img-inner" style="background-color: white;">
                    <a href="/user_product_page?id=<%= products[i]._id %>" style="background-color: rgb(255, 255, 255);">
                      <% if (products[i].productImages && products[i].productImages.length > 0) { %>
                      <% for (let j = 0; j < products[i].productImages.length; j++) { %>
                      <img style="width: 100%; height: 100%; object-fit: contain; background-color: rgb(255, 255, 255);" class="default-img" src="/<%= products[i].productImages[j] %>" alt="Product Image <%= j + 1 %>">
                      <% } %>
                      <% } %>
                    </a>
                  </div>
                </div>

              </div>
              <div class="product-content-wrap">
                <h2><a href="/user_product_page?id=<%= products[i]._id %>" style="background-color: rgb(255, 255, 255);"><%= products[i].productName %></a></h2>
                <div class="product-price">
                  <span> ₹<%= products[i].salesPrice %> </span>
                  <span class="old-price">₹<%= products[i].regularPrice %> </span>
                  <% if (products[i].isProductOfferActive && products[i].productOfferPercentage > 0) { %>
                  <span class="text-danger save-price ml-15" style="font-size: 0.9rem;">
                    <%= products[i].productOfferPercentage %>% Off
                  </span>
                  <% } %>
                </div>
                <p class="mt-15">
                  <%= products[i].description.split('.').slice(0, 1).join('.') + '.' %>
                </p>


                <div class="d-flex gap-3 p-3 ">

                  <a aria-label="Add To Wishlist" class="action-btn hover-up btn d-flex align-items-center justify-content-center px-4 py-2 rounded-pill" onclick="addToWishlist('<%= products[i]._id %>', '<%= products[i].productName %>', this, event)" id="addToWishlistBtn" style="background-color: rgba(230, 225, 225, 0.629); border: 2px solid rgb(190, 182, 182); transition: all 0.3s ease;">
                    <i class="fi-rs-heart" style="color: red; font-size: 1.0rem;"></i> <!-- Red solid heart -->
                  </a>

                  <% if (user && typeof user !== 'undefined') { %>
                  <% if (products[i].quantity <= 0) { %>
                  <span class="text-danger fs-6 align-self-center">Out of Stock</span>
                  <% } else { %>
                  <a class="action-btn hover-up btn btn-primary d-flex align-items-center justify-content-center px-4 py-2 rounded-pill" onclick="addToCart('<%= products[i]._id %>', '<%= products[i].productName %>', this, event)" href="#">
                    <i class="fi-rs-shopping-bag-add me-2"></i> Add to Cart
                  </a>
                  <% } %>
                  <% } else { %>
                  <a class="action-btn hover-up btn btn-outline-primary d-flex align-items-center justify-content-center px-4 py-2 rounded-pill" href="/login">
                    <i class="fi-rs-shopping-bag-add me-2"></i> Add to Cart
                  </a>
                  <% } %>
                </div>





              </div>
            </div>
          </div>
          <% } %>
          <% } else { %>
          <h3 style="font-size: 25px; color: red;">No products available</h3>
          <% } %>

        </div>

        <div class="col-lg-3 col-12 primary-sidebar sticky-sidebar">
          <div class="widget-category mb-30">
            <h5 class="section-title style-1 mb-30 wow fadeIn animated">Categories</h5>
            <ul class="categories">
              <% if (categories && typeof categories !== 'undefined') { %>
              <li>
                <a href="/user_shop_page?categoryName=All Brands" class="d-block p-2 <%= selectedCategory === 'All Brands' ? 'active' : '' %>">
                  <span>All Brands</span>
                </a>
              </li>
              <% categories.forEach(category => { %>
              <li>
                <a href="/user_shop_page?categoryName=<%= category.categoryName %>" class="d-block p-2 <%= selectedCategory === category.categoryName ? 'active' : '' %>">
                  <span><%= category.categoryName %></span>
                </a>
              </li>
              <% }); %>
              <% } %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<style>
  /* Responsive Design */
  @media (max-width: 768px) {
    .breadcrumb {
      font-size: 14px;
    }

    .product-list {
      margin-bottom: 30px;
    }

    .product-content-wrap h2 {
      font-size: 18px;
    }

    .product-price span {
      font-size: 14px;
    }

    .btn-cart {
      font-size: 14px;
    }
  }

  @media (max-width: 480px) {
    .product-list {
      padding: 10px;
    }

    .product-img img {
      max-width: 100%;
      height: auto;
    }
  }
</style>





<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productContainer = document.querySelector('.product-lists'); // Add a class to the product container

    const sortOptions = document.querySelectorAll('.sort-option');

    sortOptions.forEach(option => {
      option.addEventListener('click', function(event) {
        event.preventDefault();

        const sortType = event.target.getAttribute('data-sort');
        sortProducts(sortType);
      });
    });

    function sortProducts(sortType) {
      const productElements = Array.from(document.querySelectorAll('.product-list'));

      productElements.sort((a, b) => {
        const priceA = parseFloat(a.getAttribute('data-sales-price'));
        const priceB = parseFloat(b.getAttribute('data-sales-price'));

        if (sortType === 'lowToHigh') {
          return priceA - priceB;
        } else if (sortType === 'highToLow') {
          return priceB - priceA;
        }

        return 0;
      });

      // Clear existing products
      productContainer.innerHTML = '';

      // Append sorted products
      productElements.forEach(element => {
        productContainer.appendChild(element);
      });
    }
  });
</script>

<!--  with these the data on sort could be passed on the query -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const sortOptions = document.querySelectorAll('.sort-option');
    const stockFilter = document.getElementById('stock');

    sortOptions.forEach(option => {
      option.addEventListener('click', function(event) {
        event.preventDefault();

        // Get the data-sort attribute value
        const sortValue = option.getAttribute('data-sort');

        // Modify the URL and add the query parameter
        const currentURL = new URL(window.location.href);
        currentURL.searchParams.set('sort', sortValue);

        // If stock filter is selected, also add it to the URL
        if (stockFilter.value) {
          currentURL.searchParams.set('stock', stockFilter.value);
        }

        // Redirect to the updated URL
        window.location.href = currentURL.toString();
      });
    });

    // Function to handle stock filter change
    window.updateStockFilter = function() {
      const currentURL = new URL(window.location.href);
      currentURL.searchParams.set('stock', stockFilter.value);

      // If sort filter is selected, also add it to the URL
      const selectedSort = document.querySelector('#selected-sort').innerText;
      if (selectedSort) {
        currentURL.searchParams.set('sort', selectedSort);
      }

      // Redirect to the updated URL
      window.location.href = currentURL.toString();
    };
  });
</script>

<script>
  async function addToCart(productId, productName, clickedElement, event) {
    try {
      event.preventDefault();
      const response = await fetch(`/user_cart?productId=${productId}`, {
        method: 'POST'
      });

      if (!response.ok) {
        console.error(`Failed to add product: ${productName}. Status: ${response.status}`);
        addToCartErrorNotification(productName, "is OUT OF STOCK.");
        throw new Error("Error adding product to cart");
      }

      const data = await response.json();

      if (data.success) {
        addToCartNotification(productName, `is added to cart`);
        // Change the text of the button to "Added"
        changeCartButton(clickedElement, productName);
      } else {
        console.error("Error adding product to cart", data.message);
      }
    } catch (error) {
      console.error("Error adding product to cart", error);
    }
  }

  function addToCartErrorNotification(productName, action) {
    Toastify({
      text: `"${productName}"   ${action}`,
      duration: 1800,
      backgroundColor: "#FF0000",
      position: 'right',
    }).showToast();

  }


  function addToCartNotification(productName, action) {
    Toastify({
      text: `"${productName}"   ${action}`,
      duration: 1700,
      backgroundColor: "#289743",
      position: 'right',
    }).showToast();
  }

  async function addToWishlist(productId, productName, clickedElement, event) {
    try {
      event.preventDefault();
      const response = await fetch(`/user_wishlist?productId=${productId}`, {
        method: 'POST'
      });

      if (!response.ok) {
        throw new Error("Error adding product to wishlist");
      }

      const data = await response.json();

      if (data.success) {
        addToWishlistNotification(productName, `is added to wishlist`);
      } else {
        console.error("Error adding product to wishlist", data.message);
      }

    } catch (error) {
      console.error("Error adding product to wishlist", error);
    }
  }

  function addToWishlistNotification(productName, action) {
    Toastify({
      text: `"${productName}"   ${action}`,
      duration: 1700,
      backgroundColor: "#0000FF",
      position: 'right',
    }).showToast();
  }



  function changeCartButton(clicked, productName) {
    // Check if the product is out of stock
    if (clicked.parentElement.querySelector('.save-price')) {
      return; // If out of stock, do nothing
    }

    // Modify the button content
    clicked.innerHTML = ` <a aria-label="Added To Cart" class="btn-cart" style="float:right; font-size:20px font-weight:700; color:white " id="addToCartButton">
        <i class="fi-rs-check"></i> Added To Cart</a>`;
    clicked.style.pointerEvents = "none";
  }


</script>

<%- include("../layouts/user_layouts/user_footer.ejs") -%>